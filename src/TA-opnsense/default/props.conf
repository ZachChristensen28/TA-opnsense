# DO NOT EDIT THIS FILE!
# Please make all changes to files in $SPLUNK_HOME/etc/apps/TA_opnsense/local.
# To make changes, copy the section/stanza you want to change from $SPLUNK_HOME/etc/apps/TA_opnsense/default
# into ../local and edit there.

#====================================
# opnsense Global Settings
#====================================
[(::zTs){0}opnsense*]
TRANSFORMS-00_opnsense_change_sourcetype = opnsense_sourcetype_filterlog, opnsense_sourcetype_dhcpd, opnsense_sourcetype_suricata_json, opnsense_sourcetype_suricata, opnsense_sourcetype_squid, opnsense_sourcetype_cron, opnsense_sourcetype_unbound, opnsense_sourcetype_lighttpd, opnsense_sourcetype_access, opnsense_sourcetype_openvpn, opnsense_sourcetype_syslog, opnsense_sourcetype_suricata_json_alt, opnsense_sourcetype_audit
TRANSFORMS-zzz_opnsense_length           = opnsense_raw_length
ANNOTATE_PUNCT                           = false
KV_MODE                                  = none
EVAL-vendor_product                      = "OPNsense Firewall"

#====================================
# opnsense
#====================================
[opnsense]
description     = Default sourcetype for the OPNsense Firewall
category        = Network & Security
NO_BINARY_CHECK = true
CHARSET         = UTF-8
#===========================================
# SEDCMD: The below sed command normalizes a squid event with (squid-1): to squid:
# This is to help the sourcetyper extract the sourcetype properly
#===========================================
SEDCMD-0_opnsense_squid_cleaner          = s/(\(squid\S+)/squid:/g
TRANSFORMS-z_opnsense_make_suricata_json = opnsense_make_suricata_json

#====================================
# opnsense Access
#====================================
[opnsense:access]
description                    = Access Events to the OPNsense firewall
category                       = Network & Security
REPORT-opnsense_access         = opnsense_access_extract
EVAL-app                       = "opnsense_web_access"
EVAL-action                    = case(match(signature, "(?i)Successful\s+login"), "success", match(signature, "(?i)authentication\s+error"), "failure")
FIELDALIAS-opnsense_access_src = src_ip AS src

#====================================
# opnsense Audit
#====================================
[opnsense:audit]
description                       = Audit Events to the OPNsense firewall
category                          = Network & Security
REPORT-opnsense_audit             = opnsense_audit_extract
REPORT-opnsense_audit_local_login = opnsense_audit_local_login_extract
REPORT-opnsense_audit_change      = opnsense_audit_change_extract
FIELDALIAS-opnsense_audit_src     = src_ip ASNEW src
FIELDALIAS-opnsense_audit_dest    = host ASNEW dest
EVAL-app                          = if(isnotnull(uri), "opnsense:web", "opnsense:local")
LOOKUP-opnsense_audit_action      = opnsense_audit_action_lookup signature OUTPUTNEW action

#====================================
# opnsense Cron
#====================================
[opnsense:cron]
description               = Cron events produced by the OPNsense Firewall
category                  = Network & Security
REPORT-opnsense_cron_main = opnsense_cron_main

#====================================
# opnsense DHCP
#====================================
[opnsense:dhcpd]
description                      = DHCP events produced by the OPNsense Firewall
category                         = Network & Security
REPORT-opnsense_dhcp_main        = opnsense_dhcp_main
REPORT-opnsense_dhcp_discover    = opnsense_dhcp_discover
REPORT-opnsense_dhcp_reuse_lease = opnsense_dhcp_reuse_lease
FIELDALIAS-opnsense_dest_ip      = client_ip AS dest_ip
FIELDALIAS-opnsense_dest_mac     = client_mac AS dest_mac
FIELDALIAS-opnsense_nt_host      = client_name AS dest_nt_host
FIELDALIAS-opnsense_signature    = vendor_event AS signature

#====================================
# opnsense Filterlog
#====================================
[opnsense:filterlog]
description                              = Firewall events produced by the OPNsense Firewall
category                                 = Network & Security
REPORT-opnsense_dvc_ip                   = opnsense_dvc_ip
REPORT-opnsense_filterlog_repeat_msg     = opnsense_filterlog_repeat_msg
REPORT-opnsense_icmp_ipv4                = opnsense_icmp_4
REPORT-opnsense_icmp_ipv6                = opnsense_icmp_6
REPORT-opnsense_tcp_ipv4                 = opnsense_tcp_4, opnsense_vendor_tcp_flag, opnsense_vendor_options
REPORT-opnsense_tcp_ipv6                 = opnsense_tcp_6, opnsense_vendor_tcp_flag, opnsense_vendor_options
REPORT-opnsense_udp_ipv4                 = opnsense_udp_4
REPORT-opnsense_udp_ipv6                 = opnsense_udp_6
REPORT-opnsense_datalength               = opnsense_datalength
EVAL-app                                 = "opnsense_filterlog"
EVAL-bytes_in                            = if(vendor_direction=="in",'bytes',0)
EVAL-bytes_out                           = if(vendor_direction=="out",'bytes',0)
FIELDALIAS-opnsense_filterlog_src        = src_ip AS src
FIELDALIAS-opnsense_filterlog_dest       = dest_ip AS dest
FIELDALIAS-opnsense_filterlog_dest       = dest_interface ASNEW dest_int
FIELDALIAS-opnsense_filterlog_dvc        = host AS dvc
FIELDALIAS-opnsense_filterlog_session_id = id AS session_id
LOOKUP-opnsense_filterlog_action         = opnsense_filterlog_action_lookup vendor_action OUTPUTNEW action
LOOKUP-opnsense_filterlog_direction      = opnsense_filterlog_direction_lookup vendor_direction OUTPUTNEW direction
LOOKUP-opnsense_filterlog_tcp_flags      = opnsense_filterlog_tcp_flags_lookup vendor_tcp_flag OUTPUTNEW tcp_flag
LOOKUP-opnsense_filterlog_transport      = opnsense_transport_lookup vendor_transport OUTPUTNEW transport
LOOKUP-opnsense_filterlog-tos            = opnsense_tos_lookup tos OUTPUTNEW dscp_class, ip_precedence

#====================================
# opnsense Lighttpd
#====================================
[opnsense:lighttpd]
description                 = Web events produced by the OPNsense Firewall
category                    = Network & Security
REPORT-opnsense_lighttpd    = opnsense_lighttpd_extract
EVAL-app                    = "opnsense_lighttpd"
EVAL-http_user_agent_length = len(http_user_agent)
EVAL-url_length             = len(url)
FIELDALIAS-opnsense_src     = src_ip AS src
FIELDALIAS-opnsense_dest    = dest_ip AS dest
LOOKUP-opnsense_http_status = opnsense_http_status_lookup status OUTPUTNEW status_description

#====================================
# opnsense OpenVPN
#====================================
[opnsense:openvpn]
description                      = Openvpn events produced by the OPNsense Firewall
category                         = Network & Security
REPORT-opnsense_openvpn_auth     = opnsense_openvpn_auth
REPORT-opnsense_openvpn_dest_ip  = opnsense_openvpn_destip
REPORT-opnsense_openvpn_extract  = opnsense_openvpn_extract
REPORT-opnsense_openvpn_src      = opnsense_openvpn_src
FIELDALIAS-opnsense_openvpn_dest = auth_method AS dest
FIELDALIAS-opnsense_openvpn_src  = src_ip AS src
EVAL-action                      = case(isnotnull(user), "success", isnotnull(dest_ip), "success")
EVAL-app                         = "opnsense_openvpn"

#====================================
# opnsense Suricata
#====================================
[opnsense:suricata]
description                           = Intrusion Detection events produced by the OPNsense Firewall
category                              = Network & Security
REPORT-opnsense_suricata_category     = opnsense_suricata_category
REPORT-opnsense_suricata_dest_ip      = opnsense_suricata_dest_ip
REPORT-opnsense_suricata_dest_port    = opnsense_suricata_dest_port
REPORT-opnsense_suricata_pid          = opnsense_suricata_pid
REPORT-opnsense_suricata_severity_id  = opnsense_suricata_severity_id
REPORT-opnsense_suricata_signature_id = opnsense_suricata_signature_id_action
REPORT-opnsense_suricata_src_ip       = opnsense_suricata_src_ip
REPORT-opnsense_suricata_src_port     = opnsense_suricata_src_port
REPORT-opnsense_suricata_transport    = opnsense_suricata_transport
REPORT-opnsense_suricata_dvc_ip       = opnsense_dvc_ip
EVAL-app                              = "opnsense_suricata_ids"
EVAL-ids_type                         = "network"
EVAL-action                           = case(lower(vendor_action)=="drop", "blocked", isnotnull(signature), "allowed")
FIELDALIAS-opnsense_suricata_dvc      = host AS dvc
FIELDALIAS-opnsense_suricata_src      = src_ip AS src
FIELDALIAS-opnsense_suricata_dest     = dest_ip AS dest
LOOKUP-opnsense_suricata_severity     = opnsense_suricata_severity_lookup severity_id OUTPUTNEW severity
LOOKUP-opnsense_suricata_transport    = opnsense_transport_lookup vendor_transport OUTPUTNEW transport

#====================================
# opnsense Suricata JSON
#====================================
[opnsense:suricata:json]
description                                   = Intrusion Detection events produced by the OPNsense Firewall in json format
category                                      = Network & Security
TRANSFORMS-z_opnsense_make_suricata_json      = opnsense_make_suricata_json
KV_MODE                                       = json
EVAL-bytes                                    = bytes_in + bytes_out
EVAL-duration                                 = round(_time - strptime('flow.start', "%Y-%m-%dT%H:%M:%S.%6N%z"),0)
EVAL-packets                                  = packets_in + packets_out
EVAL-ids_type                                 = "network"
EVAL-transport                                = lower(proto)
FIELDALIAS-opnsense_suricatajson_action       = alert.action AS action
FIELDALIAS-opnsense_suricatajson_app          = app_proto AS app
FIELDALIAS-opnsense_suricatajson_bytesin      = flow.bytes_toclient AS bytes_in
FIELDALIAS-opnsense_suricatajson_bytesout     = flow.bytes_toserver AS bytes_out
FIELDALIAS-opnsense_suricatajson_category     = alert.category AS category
FIELDALIAS-opnsense_suricatajson_dest         = dest_ip AS dest
FIELDALIAS-opnsense_suricatajson_dvc          = host AS dvc
FIELDALIAS-opnsense_suricatajson_packetsin    = flow.pkts_toclient AS packets_in
FIELDALIAS-opnsense_suricatajson_packetsout   = flow.pkts_toserver AS packets_out
FIELDALIAS-opnsense_suricatajson_severity_id  = alert.severity AS severity_id
FIELDALIAS-opnsense_suricatajson_signature    = alert.signature AS signature
FIELDALIAS-opnsense_suricatajson_signature_id = alert.signature_id AS signature_id
FIELDALIAS-opnsense_suricatajson_src          = src_ip AS src
FIELDALIAS-opnsense_suricatajson_srcinterface = in_iface AS src_interface
EVAL-severity_id                              = mvdedup(severity_id)
LOOKUP-opnsense_suricata_json_severity        = opnsense_suricata_severity_lookup severity_id OUTPUTNEW severity

#====================================
# opnsense Squid Proxy
#====================================
[opnsense:squid]
description                   = Web proxy events produced by the OPNsense Firewall
category                      = Network & Security
REPORT-opnsense_squid_main    = 1_opnsense_squid_main, 2_opnsense_squid_url
REPORT-opnsense_squid_dvc_ip  = opnsense_dvc_ip
EVAL-app                      = "opnsense_squid_proxy"
EVAL-url_length               = len(url)
EVAL-http_content_type        = if(http_content_type=="-" OR http_content_type==":", null() , http_content_type)
EVAL-user                     = if(user=="-", null(), user)
EVAL-bytes                    = bytes_in + bytes_out
EVAL-dest_ip                  = if(dest_ip=="-", dest_ip_url, dest_ip)
EVAL-dest                     = coalesce(url, dest_ip)
EVAL-src_ip                   = if(src_ip=="-", null(), src_ip)
FIELDALIAS-opnsense_squid_src = src_ip AS src
LOOKUP-opnsense_squid_action  = opnsense_squid_action_lookup vendor_action OUTPUTNEW action
LOOKUP-opnsense_squid_status  = opnsense_squid_status_lookup status OUTPUTNEW status_description

#====================================
# opnsense System
#====================================
[opnsense:system]
description         = System events produced by the OPNsense add-on for Splunk modular input.
category            = Network & Security
SHOULD_LINEMERGE    = false
INDEXED_EXTRACTIONS = json
DATETIME_CONFIG     = CURRENT
TRUNCATE            = 99999

#====================================
# opnsense Syslog
#====================================
[opnsense:syslog]
description            = Syslog events produced by the OPNsense Firewall
category               = Network & Security
REPORT-opnsense_syslog = opnsense_syslog_extractions, opnsense_kv_syslog

#====================================
# opnsense Unbound
#====================================
[opnsense:unbound]
description                   = Unbound DNS events produced by the OPNsense Firewall
category                      = Network & Security
REPORT-opnsense_unbound_query = opnsense_unbound_query
EVAL-app                      = "opnsense_unbound_resolver"
EVAL-message_type             = "Query"

#====================================
# opnsense Modular input log
#====================================
[source::...ta-opnsense*.log*]
SHOULD_LINEMERGE = true
sourcetype       = taopnsense:log

[source::...ta_opnsense*.log*]
SHOULD_LINEMERGE = true
sourcetype       = taopnsense:log
